<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_194306_needit_needit</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>NeedIt When needed field date</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
/*		
var rightNow = new GlideDateTime();
    var whenNeeded = new GlideDateTime(current.u_when_needed).getLocalDate();
	var needItUtils = new NeedItUtils();
	gs.addInfoMessage(rightNow.getLocalDate() + " --- " + whenNeeded.getLocalDate() + " --- " + (rightNow.getLocalDate() == whenNeeded.getLocalDate()) + " --- " + (rightNow.getLocalDate().compareTo(whenNeeded.getLocalDate())));
	if (whenNeeded.getLocalDate() == rightNow.getLocalDate()) {
        gs.addErrorMessage("When Needed date cannot be set to today.");
        current.setAbortAction(true);
    }
    else if (whenNeeded.before(rightNow)) {
        gs.addErrorMessage("When Needed date cannot be in the past. Your request has not been saved to the database.");
        current.setAbortAction(true);
    }*/

    var rightNow = new GlideDateTime();
    var whenNeeded = new GlideDateTime(current.u_when_needed);
	var needItUtils = new NeedItUtils();
		
	if(needItUtils.isCurrentDate(whenNeeded)){
		gs.addErrorMessage("When Needed date cannot be set to today.");
		current.setAbortAction(true);
	}	
	else if(needItUtils.isPastDate(whenNeeded)){
		 gs.addErrorMessage("When Needed date cannot be in the past. Your request has not been saved to the database.");
		current.setAbortAction(true);
	}
	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-02-16 05:39:31</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>9bcd0a394fd813008c5a704ca310c77f</sys_id>
        <sys_mod_count>20</sys_mod_count>
        <sys_name>NeedIt When needed field date</sys_name>
        <sys_overrides/>
        <sys_package display_value="NeedIt" source="x_194306_needit">9469dee44fd093008c5a704ca310c781</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">9469dee44fd093008c5a704ca310c781</sys_scope>
        <sys_update_name>sys_script_9bcd0a394fd813008c5a704ca310c77f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-02-20 05:50:46</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=9bcd0a394fd813008c5a704ca310c77f"/>
</record_update>
